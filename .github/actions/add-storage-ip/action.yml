name: 'Add IP to Azure Storage Whitelist'
description: 'Add current runner IP address to Azure Storage account firewall rules and verify access'

inputs:
  environment:
    description: 'Deployment environment (dev, qa, prod, sbx, etc)'
    required: true
  storage-account-name:
    description: 'Name of the Azure Storage account'
    required: true
  resource-group-name:
    description: 'Name of the resource group containing the storage account'
    required: true
  azure_creds:
    description: 'Azure credential secret (JSON from GitHub Secrets)'
    required: true
  operation-timeout:
    description: 'Timeout for the IP adding operation in seconds'
    required: false
    default: '120'
  specific-ip:
    description: 'Use a specific IP address instead of detecting runner IP'
    required: false
    default: ''

outputs:
  ip-address:
    description: 'IP address that was added to the whitelist'
    value: ${{ steps.get-ip.outputs.ip }}

runs:
  using: "composite"
  steps:
    - name: Azure CLI Login
      uses: azure/login@v1
      with:
        creds: ${{ inputs.azure_creds }}

    - name: Get IP Address
      id: get-ip
      shell: bash
      run: |
        if [[ -n "${{ inputs.specific-ip }}" ]]; then
          IP_ADDRESS="${{ inputs.specific-ip }}"
          echo "Using provided IP address: $IP_ADDRESS"
        else
          IP_ADDRESS=$(curl -s https://api.ipify.org)
          echo "Detected runner IP address: $IP_ADDRESS"
        fi

        echo "ip=$IP_ADDRESS" >> $GITHUB_OUTPUT
        echo "::notice::IP address to be added: $IP_ADDRESS"

    - name: Add IP to Storage Account Firewall
      id: add-ip
      shell: bash
      run: |
        echo "::group::Adding IP to Storage Account Firewall"
        timeout ${{ inputs.operation-timeout }} az storage account network-rule add \
          --resource-group ${{ inputs.resource-group-name }} \
          --account-name ${{ inputs.storage-account-name }} \
          --ip-address ${{ steps.get-ip.outputs.ip }}

        if [[ $? -ne 0 ]]; then
          echo "::error::Failed to add IP address"
          exit 1
        fi

        echo "::notice::Successfully submitted IP for firewall addition"
        echo "::endgroup::"

    - name: Confirm Storage Access (5-Min Retry Loop)
      shell: bash
      run: |
        set +e  # prevent exit on command failure
        echo "::group::Verifying storage access via az CLI"

        start_time=$(date +%s)
        timeout=300
        interval=10

        while true; do
          echo "⏳ Attempting to list containers..."

          output=$(az storage container list \
            --account-name ${{ inputs.storage-account-name }} \
            --auth-mode login \
            --only-show-errors 2>&1)

          if [[ $? -eq 0 ]]; then
            echo "✅ Storage access confirmed."
            echo "ip_confirmed=true" >> $GITHUB_ENV
            break
          fi

          if echo "$output" | grep -qi "network rule"; then
            echo "⛔ Still blocked by firewall rules."
          else
            echo "⚠️ Unexpected error: $output"
          fi

          current_time=$(date +%s)
          elapsed=$(( current_time - start_time ))

          if [[ $elapsed -ge $timeout ]]; then
            echo "::error::Timeout after 5 minutes. Storage access not confirmed."
            exit 1
          fi

          echo "Retrying in $interval seconds..."
          sleep $interval
        done

        echo "::endgroup::"
