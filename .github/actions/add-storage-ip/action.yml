name: 'Add IP to Azure Storage Whitelist'
description: 'Add current runner IP address to Azure Storage account firewall rules'

inputs:
  environment:
    description: 'Deployment environment (dev, qa, prod, sbx, etc)'
    required: true
  storage-account-name:
    description: 'Name of the Azure Storage account'
    required: true
  resource-group-name:
    description: 'Name of the resource group containing the storage account'
    required: true
  azure_creds:
    description: 'Azure credential secret (JSON from GitHub Secrets)'
    required: true
  operation-timeout:
    description: 'Timeout for the IP adding operation in seconds'
    required: false
    default: '120'
  specific-ip:
    description: 'Use a specific IP address instead of detecting runner IP'
    required: false
    default: ''

outputs:
  ip-address:
    description: 'IP address that was added to the whitelist'
    value: ${{ steps.get-ip.outputs.ip }}

runs:
  using: "composite"
  steps:
    - name: Azure CLI Login
      uses: azure/login@v1
      with:
        creds: ${{ inputs.azure_creds }}

    - name: Get IP Address
      id: get-ip
      shell: bash
      run: |
        if [[ -n "${{ inputs.specific-ip }}" ]]; then
          IP_ADDRESS="${{ inputs.specific-ip }}"
          echo "Using provided IP address: $IP_ADDRESS"
        else
          IP_ADDRESS=$(curl -s https://api.ipify.org)
          echo "Detected runner IP address: $IP_ADDRESS"
        fi

        echo "ip=$IP_ADDRESS" >> $GITHUB_OUTPUT
        echo "::notice::IP address to be added: $IP_ADDRESS"

    - name: Add IP to Storage Account Firewall
      id: add-ip
      shell: bash
      run: |
        echo "::group::Adding IP to Storage Account Firewall"
        echo "Adding IP address ${{ steps.get-ip.outputs.ip }}..."

        timeout ${{ inputs.operation-timeout }} az storage account network-rule add \
          --resource-group ${{ inputs.resource-group-name }} \
          --account-name ${{ inputs.storage-account-name }} \
          --ip-address ${{ steps.get-ip.outputs.ip }}

        if [[ $? -ne 0 ]]; then
          echo "::error::Failed to add IP address"
          exit 1
        fi

        echo "::notice::Successfully submitted IP ${{ steps.get-ip.outputs.ip }} for firewall addition"
        echo "::endgroup::"

    # - name: Confirm IP Whitelisting
    #   shell: bash
    #   run: |
    #     echo "::group::Verifying IP is active in firewall rules"
    #     for i in {1..6}; do
    #       sleep 5
    #       echo "Checking attempt $i..."
    #       FOUND=$(az storage account network-rule list \
    #         --resource-group ${{ inputs.resource-group-name }} \
    #         --account-name ${{ inputs.storage-account-name }} \
    #         --query "ipRules[].ipAddressOrRange" -o tsv | grep -Fx "${{ steps.get-ip.outputs.ip }}" || true)

    #       if [[ -n "$FOUND" ]]; then
    #         echo "::notice::Confirmed IP $FOUND is active in firewall rules."
    #         echo "ip_confirmed=true" >> $GITHUB_ENV
    #         break
    #       fi

    #       if [[ "$i" -eq 6 ]]; then
    #         echo "::error::IP address not found in firewall rules after waiting"
    #         exit 1
    #       fi
    #     done
    #     echo "::endgroup::"


    - name: Confirm Storage Access via az
      shell: bash
      run: |
        az storage container list \
          --account-name ${{ inputs.storage-account-name }} \
          --auth-mode login \
          --only-show-errors > /dev/null
    
        if [[ $? -eq 0 ]]; then
          echo "::notice::Confirmed access to blob containers — IP + role are active"
          echo "ip_confirmed=true" >> $GITHUB_ENV
        else
          echo "::error::Storage access failed — IP or role not active"
          exit 1
        fi