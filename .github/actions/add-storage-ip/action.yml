name: 'Add IP to Azure Storage Whitelist'
description: 'Add current runner IP address to Azure Storage account firewall rules'

inputs:
  environment:
    description: 'Deployment environment (dev, qa, prod, sbx, etc)'
    required: true
  storage-account-name:
    description: 'Name of the Azure Storage account'
    required: true
  resource-group-name:
    description: 'Name of the resource group containing the storage account'
    required: true
  azure_creds:
    description: 'Azure credential secret (JSON from GitHub Secrets)'
    required: true
  operation-timeout:
    description: 'Timeout for the IP adding operation in seconds'
    required: false
    default: '120'
  specific-ip:
    description: 'Use a specific IP address instead of detecting runner IP'
    required: false
    default: ''

outputs:
  ip-address:
    description: 'IP address that was added to the whitelist'
    value: ${{ steps.get-ip.outputs.ip }}

runs:
  using: "composite"
  steps:
    - name: Azure CLI Login
      uses: azure/login@v1
      with:
        creds: ${{ inputs.azure_creds }}

    - name: Get IP Address
      id: get-ip
      shell: bash
      run: |
        if [[ -n "${{ inputs.specific-ip }}" ]]; then
          IP_ADDRESS="${{ inputs.specific-ip }}"
        else
          IP_ADDRESS=$(curl -s https://api.ipify.org)
        fi

        echo "ip=$IP_ADDRESS" >> $GITHUB_OUTPUT
        echo "::notice::IP address to be added: $IP_ADDRESS"

    - name: Add IP to Storage Account Firewall
      id: add-ip
      shell: bash
      run: |
        echo "::group::Adding IP to Storage Account Firewall"
        echo "Adding IP address ${{ steps.get-ip.outputs.ip }}..."

        timeout ${{ inputs.operation-timeout }} az storage account network-rule add \
          --resource-group ${{ inputs.resource-group-name }} \
          --account-name ${{ inputs.storage-account-name }} \
          --ip-address ${{ steps.get-ip.outputs.ip }}

        if [[ $? -eq 0 ]]; then
          echo "::notice::Successfully added IP ${{ steps.get-ip.outputs.ip }}"
        else
          echo "::error::Failed to add IP address"
          exit 1
        fi
        echo "::endgroup::"
